/**
 * moon-vault-api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#include "OpenAPIQuote.h"

#include "OpenAPIModule.h"
#include "OpenAPIHelpers.h"

#include "Templates/SharedPointer.h"

namespace OpenAPI
{

void OpenAPIQuote::WriteJson(JsonWriter& Writer) const
{
	Writer->WriteObjectStart();
	Writer->WriteIdentifierPrefix(TEXT("recommendations")); WriteJsonValue(Writer, Recommendations);
	Writer->WriteIdentifierPrefix(TEXT("paymentMethod")); WriteJsonValue(Writer, PaymentMethod);
	Writer->WriteIdentifierPrefix(TEXT("quoteId")); WriteJsonValue(Writer, QuoteId);
	Writer->WriteIdentifierPrefix(TEXT("ramp")); WriteJsonValue(Writer, Ramp);
	Writer->WriteIdentifierPrefix(TEXT("availablePaymentMethods")); WriteJsonValue(Writer, AvailablePaymentMethods);
	Writer->WriteIdentifierPrefix(TEXT("payout")); WriteJsonValue(Writer, Payout);
	Writer->WriteIdentifierPrefix(TEXT("transactionFee")); WriteJsonValue(Writer, TransactionFee);
	Writer->WriteIdentifierPrefix(TEXT("networkFee")); WriteJsonValue(Writer, NetworkFee);
	Writer->WriteIdentifierPrefix(TEXT("rate")); WriteJsonValue(Writer, Rate);
	Writer->WriteObjectEnd();
}

bool OpenAPIQuote::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{
	const TSharedPtr<FJsonObject>* Object;
	if (!JsonValue->TryGetObject(Object))
		return false;

	bool ParseSuccess = true;

	ParseSuccess &= TryGetJsonValue(*Object, TEXT("recommendations"), Recommendations);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("paymentMethod"), PaymentMethod);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("quoteId"), QuoteId);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("ramp"), Ramp);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("availablePaymentMethods"), AvailablePaymentMethods);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("payout"), Payout);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("transactionFee"), TransactionFee);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("networkFee"), NetworkFee);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("rate"), Rate);

	return ParseSuccess;
}

}
