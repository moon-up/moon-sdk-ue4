/**
 * moon-vault-api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#include "OpenAPITransactionInputSupportedParamsTheme.h"

#include "MoonSDKModule.h"
#include "OpenAPIHelpers.h"

#include "Templates/SharedPointer.h"

namespace MoonSDK
{

void OpenAPITransactionInputSupportedParamsTheme::WriteJson(JsonWriter& Writer) const
{
	Writer->WriteObjectStart();
	Writer->WriteIdentifierPrefix(TEXT("borderRadius")); WriteJsonValue(Writer, BorderRadius);
	Writer->WriteIdentifierPrefix(TEXT("cardColor")); WriteJsonValue(Writer, CardColor);
	Writer->WriteIdentifierPrefix(TEXT("secondaryTextColor")); WriteJsonValue(Writer, SecondaryTextColor);
	Writer->WriteIdentifierPrefix(TEXT("primaryTextColor")); WriteJsonValue(Writer, PrimaryTextColor);
	Writer->WriteIdentifierPrefix(TEXT("secondaryColor")); WriteJsonValue(Writer, SecondaryColor);
	Writer->WriteIdentifierPrefix(TEXT("primaryColor")); WriteJsonValue(Writer, PrimaryColor);
	Writer->WriteIdentifierPrefix(TEXT("themeName")); WriteJsonValue(Writer, ThemeName);
	Writer->WriteIdentifierPrefix(TEXT("isDark")); WriteJsonValue(Writer, IsDark);
	Writer->WriteObjectEnd();
}

bool OpenAPITransactionInputSupportedParamsTheme::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{
	const TSharedPtr<FJsonObject>* Object;
	if (!JsonValue->TryGetObject(Object))
		return false;

	bool ParseSuccess = true;

	ParseSuccess &= TryGetJsonValue(*Object, TEXT("borderRadius"), BorderRadius);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("cardColor"), CardColor);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("secondaryTextColor"), SecondaryTextColor);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("primaryTextColor"), PrimaryTextColor);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("secondaryColor"), SecondaryColor);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("primaryColor"), PrimaryColor);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("themeName"), ThemeName);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("isDark"), IsDark);

	return ParseSuccess;
}

}
