/**
 * moon-vault-api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#include "OpenAPITransactionInput.h"

#include "OpenAPIModule.h"
#include "OpenAPIHelpers.h"

#include "Templates/SharedPointer.h"

namespace OpenAPI
{

void OpenAPITransactionInput::WriteJson(JsonWriter& Writer) const
{
	Writer->WriteObjectStart();
	Writer->WriteIdentifierPrefix(TEXT("supportedParams")); WriteJsonValue(Writer, SupportedParams);
	Writer->WriteIdentifierPrefix(TEXT("wallet")); WriteJsonValue(Writer, Wallet);
	Writer->WriteIdentifierPrefix(TEXT("metaData")); WriteJsonValue(Writer, MetaData);
	Writer->WriteIdentifierPrefix(TEXT("originatingHost")); WriteJsonValue(Writer, OriginatingHost);
	Writer->WriteIdentifierPrefix(TEXT("partnerContext")); WriteJsonValue(Writer, PartnerContext);
	Writer->WriteIdentifierPrefix(TEXT("uuid")); WriteJsonValue(Writer, Uuid);
	Writer->WriteIdentifierPrefix(TEXT("network")); WriteJsonValue(Writer, Network);
	Writer->WriteIdentifierPrefix(TEXT("paymentMethod")); WriteJsonValue(Writer, PaymentMethod);
	Writer->WriteIdentifierPrefix(TEXT("type")); WriteJsonValue(Writer, Type);
	Writer->WriteIdentifierPrefix(TEXT("amount")); WriteJsonValue(Writer, Amount);
	Writer->WriteIdentifierPrefix(TEXT("destination")); WriteJsonValue(Writer, Destination);
	Writer->WriteIdentifierPrefix(TEXT("source")); WriteJsonValue(Writer, Source);
	Writer->WriteIdentifierPrefix(TEXT("onramp")); WriteJsonValue(Writer, Onramp);
	Writer->WriteObjectEnd();
}

bool OpenAPITransactionInput::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{
	const TSharedPtr<FJsonObject>* Object;
	if (!JsonValue->TryGetObject(Object))
		return false;

	bool ParseSuccess = true;

	ParseSuccess &= TryGetJsonValue(*Object, TEXT("supportedParams"), SupportedParams);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("wallet"), Wallet);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("metaData"), MetaData);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("originatingHost"), OriginatingHost);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("partnerContext"), PartnerContext);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("uuid"), Uuid);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("network"), Network);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("paymentMethod"), PaymentMethod);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("type"), Type);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("amount"), Amount);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("destination"), Destination);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("source"), Source);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("onramp"), Onramp);

	return ParseSuccess;
}

}
