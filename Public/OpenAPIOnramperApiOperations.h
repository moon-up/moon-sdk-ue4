/**
 * moon-vault-api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#pragma once

#include "OpenAPIBaseModel.h"
#include "OpenAPIOnramperApi.h"

#include "OpenAPIGetSupportedOnRampsResponse.h"
#include "OpenAPIQuote.h"
#include "OpenAPISellQuote.h"
#include "OpenAPISupportedAssetResponse.h"
#include "OpenAPISupportedCurrenciesResponse.h"
#include "OpenAPISupportedDefaultResponse.h"
#include "OpenAPISupportedPaymentTypesCurrencyResponse.h"
#include "OpenAPITransactionInput.h"

namespace MoonSDK
{

/* 

*/
class MOONSDK_API OpenAPIOnramperApi::OnRamperCheckoutRequest : public Request
{
public:
    virtual ~OnRamperCheckoutRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	FString Authorization;
	FString AccountName;
	OpenAPITransactionInput OpenAPITransactionInput;
};

class MOONSDK_API OpenAPIOnramperApi::OnRamperCheckoutResponse : public Response
{
public:
    virtual ~OnRamperCheckoutResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    TSharedPtr<FJsonValue> Content;
};

/* 

*/
class MOONSDK_API OpenAPIOnramperApi::OnRamperGetQuotesBuyRequest : public Request
{
public:
    virtual ~OnRamperGetQuotesBuyRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	FString Authorization;
	FString Fiat;
	FString Crypto;
	double Amount = 0.0;
	TOptional<FString> PaymentMethod;
	TOptional<FString> Uuid;
	TOptional<FString> ClientName;
	TOptional<FString> Country;
};

class MOONSDK_API OpenAPIOnramperApi::OnRamperGetQuotesBuyResponse : public Response
{
public:
    virtual ~OnRamperGetQuotesBuyResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    TArray<OpenAPIQuote> Content;
};

/* 

*/
class MOONSDK_API OpenAPIOnramperApi::OnRamperGetQuotesSellRequest : public Request
{
public:
    virtual ~OnRamperGetQuotesSellRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	FString Authorization;
	FString Fiat;
	FString Crypto;
	double Amount = 0.0;
	TOptional<FString> PaymentMethod;
	TOptional<FString> Uuid;
	TOptional<FString> ClientName;
	TOptional<FString> Country;
};

class MOONSDK_API OpenAPIOnramperApi::OnRamperGetQuotesSellResponse : public Response
{
public:
    virtual ~OnRamperGetQuotesSellResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    TArray<OpenAPISellQuote> Content;
};

/* 

*/
class MOONSDK_API OpenAPIOnramperApi::OnRamperGetSupportedAssetsRequest : public Request
{
public:
    virtual ~OnRamperGetSupportedAssetsRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	FString Authorization;
	FString Source;
	FString Country;
};

class MOONSDK_API OpenAPIOnramperApi::OnRamperGetSupportedAssetsResponse : public Response
{
public:
    virtual ~OnRamperGetSupportedAssetsResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPISupportedAssetResponse Content;
};

/* 

*/
class MOONSDK_API OpenAPIOnramperApi::OnRamperGetSupportedCurrenciesRequest : public Request
{
public:
    virtual ~OnRamperGetSupportedCurrenciesRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	FString Authorization;
	FString Type;
};

class MOONSDK_API OpenAPIOnramperApi::OnRamperGetSupportedCurrenciesResponse : public Response
{
public:
    virtual ~OnRamperGetSupportedCurrenciesResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPISupportedCurrenciesResponse Content;
};

/* 

*/
class MOONSDK_API OpenAPIOnramperApi::OnRamperGetSupportedDefaultsAllRequest : public Request
{
public:
    virtual ~OnRamperGetSupportedDefaultsAllRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	FString Authorization;
	FString Country;
	FString Type;
};

class MOONSDK_API OpenAPIOnramperApi::OnRamperGetSupportedDefaultsAllResponse : public Response
{
public:
    virtual ~OnRamperGetSupportedDefaultsAllResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPISupportedDefaultResponse Content;
};

/* 

*/
class MOONSDK_API OpenAPIOnramperApi::OnRamperGetSupportedOnRampsAllRequest : public Request
{
public:
    virtual ~OnRamperGetSupportedOnRampsAllRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	FString Authorization;
};

class MOONSDK_API OpenAPIOnramperApi::OnRamperGetSupportedOnRampsAllResponse : public Response
{
public:
    virtual ~OnRamperGetSupportedOnRampsAllResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPIGetSupportedOnRampsResponse Content;
};

/* 

*/
class MOONSDK_API OpenAPIOnramperApi::OnRamperGetSupportedPaymentTypesRequest : public Request
{
public:
    virtual ~OnRamperGetSupportedPaymentTypesRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	FString Authorization;
	FString Fiat;
	FString Country;
	FString Type;
};

class MOONSDK_API OpenAPIOnramperApi::OnRamperGetSupportedPaymentTypesResponse : public Response
{
public:
    virtual ~OnRamperGetSupportedPaymentTypesResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPISupportedPaymentTypesCurrencyResponse Content;
};

/* 

*/
class MOONSDK_API OpenAPIOnramperApi::OnRamperGetSupportedPaymentTypesFiatRequest : public Request
{
public:
    virtual ~OnRamperGetSupportedPaymentTypesFiatRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;

	FString Authorization;
	FString Fiat;
	FString Country;
};

class MOONSDK_API OpenAPIOnramperApi::OnRamperGetSupportedPaymentTypesFiatResponse : public Response
{
public:
    virtual ~OnRamperGetSupportedPaymentTypesFiatResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;

    OpenAPISupportedPaymentTypesCurrencyResponse Content;
};

}
