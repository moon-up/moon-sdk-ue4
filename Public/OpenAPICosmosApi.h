/**
 * moon-vault-api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#pragma once

#include "CoreMinimal.h"
#include "OpenAPIBaseModel.h"

namespace MoonSDK
{

class MOONSDK_API OpenAPICosmosApi
{
public:
	OpenAPICosmosApi();
	~OpenAPICosmosApi();

	/* Sets the URL Endpoint.
	* Note: several fallback endpoints can be configured in request retry policies, see Request::SetShouldRetry */
	void SetURL(const FString& Url);

	/* Adds global header params to all requests */
	void AddHeaderParam(const FString& Key, const FString& Value);
	void ClearHeaderParams();

	/* Sets the retry manager to the user-defined retry manager. User must manage the lifetime of the retry manager.
	* If no retry manager is specified and a request needs retries, a default retry manager will be used.
	* See also: Request::SetShouldRetry */
	void SetHttpRetryManager(FHttpRetrySystem::FManager& RetryManager);
	FHttpRetrySystem::FManager& GetHttpRetryManager();

	class CreateCosmosAccountRequest;
	class CreateCosmosAccountResponse;
	class GetCosmosAccountRequest;
	class GetCosmosAccountResponse;
	class ListCosmosAccountsRequest;
	class ListCosmosAccountsResponse;
	class SignCosmosTransactionRequest;
	class SignCosmosTransactionResponse;
	
    DECLARE_DELEGATE_OneParam(FCreateCosmosAccountDelegate, const CreateCosmosAccountResponse&);
    DECLARE_DELEGATE_OneParam(FGetCosmosAccountDelegate, const GetCosmosAccountResponse&);
    DECLARE_DELEGATE_OneParam(FListCosmosAccountsDelegate, const ListCosmosAccountsResponse&);
    DECLARE_DELEGATE_OneParam(FSignCosmosTransactionDelegate, const SignCosmosTransactionResponse&);
    
    FHttpRequestPtr CreateCosmosAccount(const CreateCosmosAccountRequest& Request, const FCreateCosmosAccountDelegate& Delegate = FCreateCosmosAccountDelegate()) const;
    FHttpRequestPtr GetCosmosAccount(const GetCosmosAccountRequest& Request, const FGetCosmosAccountDelegate& Delegate = FGetCosmosAccountDelegate()) const;
    FHttpRequestPtr ListCosmosAccounts(const ListCosmosAccountsRequest& Request, const FListCosmosAccountsDelegate& Delegate = FListCosmosAccountsDelegate()) const;
    FHttpRequestPtr SignCosmosTransaction(const SignCosmosTransactionRequest& Request, const FSignCosmosTransactionDelegate& Delegate = FSignCosmosTransactionDelegate()) const;
    
private:
    void OnCreateCosmosAccountResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FCreateCosmosAccountDelegate Delegate) const;
    void OnGetCosmosAccountResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FGetCosmosAccountDelegate Delegate) const;
    void OnListCosmosAccountsResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FListCosmosAccountsDelegate Delegate) const;
    void OnSignCosmosTransactionResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FSignCosmosTransactionDelegate Delegate) const;
    
	FHttpRequestRef CreateHttpRequest(const Request& Request) const;
	bool IsValid() const;
	void HandleResponse(FHttpResponsePtr HttpResponse, bool bSucceeded, Response& InOutResponse) const;

	FString Url;
	TMap<FString,FString> AdditionalHeaderParams;
	mutable FHttpRetrySystem::FManager* RetryManager = nullptr;
	mutable TUniquePtr<HttpRetryManager> DefaultRetryManager;
};

}
