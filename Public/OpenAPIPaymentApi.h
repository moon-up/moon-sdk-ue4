/**
 * moon-vault-api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#pragma once

#include "CoreMinimal.h"
#include "OpenAPIBaseModel.h"

namespace MoonSDK
{

class MOONSDK_API OpenAPIPaymentApi
{
public:
	OpenAPIPaymentApi();
	~OpenAPIPaymentApi();

	/* Sets the URL Endpoint.
	* Note: several fallback endpoints can be configured in request retry policies, see Request::SetShouldRetry */
	void SetURL(const FString& Url);

	/* Adds global header params to all requests */
	void AddHeaderParam(const FString& Key, const FString& Value);
	void ClearHeaderParams();

	/* Sets the retry manager to the user-defined retry manager. User must manage the lifetime of the retry manager.
	* If no retry manager is specified and a request needs retries, a default retry manager will be used.
	* See also: Request::SetShouldRetry */
	void SetHttpRetryManager(FHttpRetrySystem::FManager& RetryManager);
	FHttpRetrySystem::FManager& GetHttpRetryManager();

	class CreatePaymentIntentConfigRequest;
	class CreatePaymentIntentConfigResponse;
	class DeletePaymentIntentConfigRequest;
	class DeletePaymentIntentConfigResponse;
	class GetAllPaymentIntentConfigsRequest;
	class GetAllPaymentIntentConfigsResponse;
	class GetOnePaymentIntentConfigsRequest;
	class GetOnePaymentIntentConfigsResponse;
	class MoralisWebhookRequest;
	class MoralisWebhookResponse;
	class PaymentCreatePaymentIntentRequest;
	class PaymentCreatePaymentIntentResponse;
	class PaymentDeletePaymentIntentRequest;
	class PaymentDeletePaymentIntentResponse;
	class PaymentGetAllPaymentIntentsRequest;
	class PaymentGetAllPaymentIntentsResponse;
	class PaymentGetAvailableChainsRequest;
	class PaymentGetAvailableChainsResponse;
	class PaymentGetPaymentIntentRequest;
	class PaymentGetPaymentIntentResponse;
	class PaymentUpdatePaymentIntentRequest;
	class PaymentUpdatePaymentIntentResponse;
	class TatumWebhookRequest;
	class TatumWebhookResponse;
	class UpdatePaymentIntentConfigRequest;
	class UpdatePaymentIntentConfigResponse;
	
    DECLARE_DELEGATE_OneParam(FCreatePaymentIntentConfigDelegate, const CreatePaymentIntentConfigResponse&);
    DECLARE_DELEGATE_OneParam(FDeletePaymentIntentConfigDelegate, const DeletePaymentIntentConfigResponse&);
    DECLARE_DELEGATE_OneParam(FGetAllPaymentIntentConfigsDelegate, const GetAllPaymentIntentConfigsResponse&);
    DECLARE_DELEGATE_OneParam(FGetOnePaymentIntentConfigsDelegate, const GetOnePaymentIntentConfigsResponse&);
    DECLARE_DELEGATE_OneParam(FMoralisWebhookDelegate, const MoralisWebhookResponse&);
    DECLARE_DELEGATE_OneParam(FPaymentCreatePaymentIntentDelegate, const PaymentCreatePaymentIntentResponse&);
    DECLARE_DELEGATE_OneParam(FPaymentDeletePaymentIntentDelegate, const PaymentDeletePaymentIntentResponse&);
    DECLARE_DELEGATE_OneParam(FPaymentGetAllPaymentIntentsDelegate, const PaymentGetAllPaymentIntentsResponse&);
    DECLARE_DELEGATE_OneParam(FPaymentGetAvailableChainsDelegate, const PaymentGetAvailableChainsResponse&);
    DECLARE_DELEGATE_OneParam(FPaymentGetPaymentIntentDelegate, const PaymentGetPaymentIntentResponse&);
    DECLARE_DELEGATE_OneParam(FPaymentUpdatePaymentIntentDelegate, const PaymentUpdatePaymentIntentResponse&);
    DECLARE_DELEGATE_OneParam(FTatumWebhookDelegate, const TatumWebhookResponse&);
    DECLARE_DELEGATE_OneParam(FUpdatePaymentIntentConfigDelegate, const UpdatePaymentIntentConfigResponse&);
    
    FHttpRequestPtr CreatePaymentIntentConfig(const CreatePaymentIntentConfigRequest& Request, const FCreatePaymentIntentConfigDelegate& Delegate = FCreatePaymentIntentConfigDelegate()) const;
    FHttpRequestPtr DeletePaymentIntentConfig(const DeletePaymentIntentConfigRequest& Request, const FDeletePaymentIntentConfigDelegate& Delegate = FDeletePaymentIntentConfigDelegate()) const;
    FHttpRequestPtr GetAllPaymentIntentConfigs(const GetAllPaymentIntentConfigsRequest& Request, const FGetAllPaymentIntentConfigsDelegate& Delegate = FGetAllPaymentIntentConfigsDelegate()) const;
    FHttpRequestPtr GetOnePaymentIntentConfigs(const GetOnePaymentIntentConfigsRequest& Request, const FGetOnePaymentIntentConfigsDelegate& Delegate = FGetOnePaymentIntentConfigsDelegate()) const;
    FHttpRequestPtr MoralisWebhook(const MoralisWebhookRequest& Request, const FMoralisWebhookDelegate& Delegate = FMoralisWebhookDelegate()) const;
    FHttpRequestPtr PaymentCreatePaymentIntent(const PaymentCreatePaymentIntentRequest& Request, const FPaymentCreatePaymentIntentDelegate& Delegate = FPaymentCreatePaymentIntentDelegate()) const;
    FHttpRequestPtr PaymentDeletePaymentIntent(const PaymentDeletePaymentIntentRequest& Request, const FPaymentDeletePaymentIntentDelegate& Delegate = FPaymentDeletePaymentIntentDelegate()) const;
    FHttpRequestPtr PaymentGetAllPaymentIntents(const PaymentGetAllPaymentIntentsRequest& Request, const FPaymentGetAllPaymentIntentsDelegate& Delegate = FPaymentGetAllPaymentIntentsDelegate()) const;
    FHttpRequestPtr PaymentGetAvailableChains(const PaymentGetAvailableChainsRequest& Request, const FPaymentGetAvailableChainsDelegate& Delegate = FPaymentGetAvailableChainsDelegate()) const;
    FHttpRequestPtr PaymentGetPaymentIntent(const PaymentGetPaymentIntentRequest& Request, const FPaymentGetPaymentIntentDelegate& Delegate = FPaymentGetPaymentIntentDelegate()) const;
    FHttpRequestPtr PaymentUpdatePaymentIntent(const PaymentUpdatePaymentIntentRequest& Request, const FPaymentUpdatePaymentIntentDelegate& Delegate = FPaymentUpdatePaymentIntentDelegate()) const;
    FHttpRequestPtr TatumWebhook(const TatumWebhookRequest& Request, const FTatumWebhookDelegate& Delegate = FTatumWebhookDelegate()) const;
    FHttpRequestPtr UpdatePaymentIntentConfig(const UpdatePaymentIntentConfigRequest& Request, const FUpdatePaymentIntentConfigDelegate& Delegate = FUpdatePaymentIntentConfigDelegate()) const;
    
private:
    void OnCreatePaymentIntentConfigResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FCreatePaymentIntentConfigDelegate Delegate) const;
    void OnDeletePaymentIntentConfigResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FDeletePaymentIntentConfigDelegate Delegate) const;
    void OnGetAllPaymentIntentConfigsResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FGetAllPaymentIntentConfigsDelegate Delegate) const;
    void OnGetOnePaymentIntentConfigsResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FGetOnePaymentIntentConfigsDelegate Delegate) const;
    void OnMoralisWebhookResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FMoralisWebhookDelegate Delegate) const;
    void OnPaymentCreatePaymentIntentResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FPaymentCreatePaymentIntentDelegate Delegate) const;
    void OnPaymentDeletePaymentIntentResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FPaymentDeletePaymentIntentDelegate Delegate) const;
    void OnPaymentGetAllPaymentIntentsResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FPaymentGetAllPaymentIntentsDelegate Delegate) const;
    void OnPaymentGetAvailableChainsResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FPaymentGetAvailableChainsDelegate Delegate) const;
    void OnPaymentGetPaymentIntentResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FPaymentGetPaymentIntentDelegate Delegate) const;
    void OnPaymentUpdatePaymentIntentResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FPaymentUpdatePaymentIntentDelegate Delegate) const;
    void OnTatumWebhookResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FTatumWebhookDelegate Delegate) const;
    void OnUpdatePaymentIntentConfigResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FUpdatePaymentIntentConfigDelegate Delegate) const;
    
	FHttpRequestRef CreateHttpRequest(const Request& Request) const;
	bool IsValid() const;
	void HandleResponse(FHttpResponsePtr HttpResponse, bool bSucceeded, Response& InOutResponse) const;

	FString Url;
	TMap<FString,FString> AdditionalHeaderParams;
	mutable FHttpRetrySystem::FManager* RetryManager = nullptr;
	mutable TUniquePtr<HttpRetryManager> DefaultRetryManager;
};

}
